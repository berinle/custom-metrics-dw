buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'http://repo.jfrog.org/artifactory/gradle-plugins'
        }
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.0.16'
        classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
    }
}

apply plugin: 'java'
apply plugin: 'shadow'

repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    testCompile 'junit:junit:4.11'

    compile "com.yammer.dropwizard:dropwizard-core:0.6.2"
    compile "aopalliance:aopalliance:1.0"
    compile "org.reflections:reflections:0.9.9-RC1"

    //aspectj
    compile "org.aspectj:aspectjrt:$aspectJVer"
    runtime "org.aspectj:aspectjweaver:$aspectJVer"
}

jar {
    manifest {
        attributes 'Main-Class': "${mainClass}"
        attributes 'Built-Date': new Date() //now
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Build-Jdk': System.getProperty('java.version')
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Vendor-Id': project.group
    }
}

shadow {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

task run(dependsOn: 'shadowJar', group: 'dropwizard',  description: "Run service using dev configuration") << {
    // Grab any dw. properties that are specified on the command line and pass to the Java process (i.e. dw.http.port=8080)
    def props = project.ext.properties.findAll { it.key.startsWith('dw') }
    def aspectJJar = configurations.runtime.find { it.name.contains("aspectjweaver") }
    javaexec {
        main = '-jar'
        args = ["${shadow.shadowJar.getPath()}", 'server', 'app.yml']
        systemProperties = props
        jvmArgs = ["-javaagent:$aspectJJar"]
    }
}
